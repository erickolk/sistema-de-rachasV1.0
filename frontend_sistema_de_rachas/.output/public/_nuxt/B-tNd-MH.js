import{_ as I}from"./D72-8j2z.js";import{_ as N}from"./D5jqPnZi.js";import{_ as k}from"./BODeONSb.js";import{m as P,v as S,r as y,p as w,c as a,a as t,b as c,w as E,an as F,ah as G,$ as C,o as r,d as B,a0 as x,a1 as g,t as h}from"./DJoCQzgD.js";import{s as M}from"./BKAYiMY5.js";import{P as o}from"./BdHHas3-.js";import{c as K,u as V}from"./BhaXg5TM.js";import"./1R96cE9n.js";import"./DDSFaLPl.js";import"./BF-rSLMc.js";import"./D781cylh.js";const $={class:"sorted-teams"},j={class:"flex flex-col pt-8 px-16 max-w-screen-lg mx-auto"},O={class:"flex items-center justify-between mb-6"},W={key:0,class:"flex justify-center items-center py-8"},H={key:1,class:"grid grid-cols-1 md:grid-cols-2 gap-4"},z={class:"bg-black/5 rounded-lg p-4"},Z={class:"flex justify-between items-center mb-4"},q={class:"text-lg font-semibold"},J={class:"text-sm font-medium bg-emerald-400 text-zinc-950 px-2 py-1 rounded"},Q={class:"space-y-2"},U={key:2,class:"text-center py-8"},X={class:"flex justify-end gap-x-4 mt-6"},de=P({name:"SortedTeams",__name:"sorted_times",setup(Y){const m=G(),T=C(),d=S(),i=y(!1),l=y([]),b={[o.GOALKEEPER]:"GL",[o.DEFENDER]:"ZG",[o.RIGHT_BACK]:"LD",[o.LEFT_BACK]:"LE",[o.MIDFIELDER]:"ME",[o.DEFENSIVE_MIDFIELDER]:"VOL",[o.ATTACKING_MIDFIELDER]:"MA",[o.RIGHT_WINGER]:"PD",[o.LEFT_WINGER]:"PE",[o.FORWARD]:"AT",[o.STRIKER]:"CA"},R=s=>s.players.reduce((e,n)=>e+(n.stars||1),0),p=async()=>{try{i.value=!0;const s=await K(m.params.id);if(console.log("Resposta do serviço:",s),!s||!Array.isArray(s))throw console.error("Resposta inválida do servidor:",s),new Error("Formato de resposta inválido");l.value=s.map(e=>(console.log("Processando time:",e),{...e,players:(e.players||[]).map(n=>({...n,stars:n.stars||1,position:n.position||o.GOALKEEPER}))})),console.log("Times processados:",l.value)}catch(s){console.error("Erro completo:",s),d.add({severity:"error",summary:"Erro ao gerar times",detail:"Não foi possível gerar os times. Tente novamente.",life:3e3})}finally{i.value=!1}},L=async()=>{try{i.value=!0,await V(m.params.id,{teams:l.value}),d.add({severity:"success",summary:"Times salvos com sucesso!",life:3e3}),T.push(`/matches/${m.params.id}`)}catch{d.add({severity:"error",summary:"Erro ao salvar times",detail:"Não foi possível salvar os times. Tente novamente.",life:3e3})}finally{i.value=!1}};return w(()=>{p()}),(s,e)=>{const n=I,A=N,D=k,u=M;return r(),a("div",$,[t("div",j,[t("div",O,[c(n,{to:`/matches/${(s._.provides[F]||s.$route).params.id}/`,class:"flex items-center gap-x-2 text-sm hover:text-primary transition-colors"},{default:E(()=>e[0]||(e[0]=[t("i",{class:"pi pi-arrow-left"},null,-1),B(" Voltar ")])),_:1},8,["to"]),e[1]||(e[1]=t("h1",{class:"text-xl font-bold text-center flex-1"},"Sorteio de Times",-1))]),c(D,{title:"Times Sorteados"},{content:E(()=>[i.value?(r(),a("div",W,e[2]||(e[2]=[t("i",{class:"pi pi-spin pi-spinner text-4xl"},null,-1)]))):l.value.length?(r(),a("div",H,[(r(!0),a(x,null,g(l.value,(_,v)=>(r(),a("div",{key:v,class:"team-card"},[t("div",z,[t("div",Z,[t("h3",q,"Time "+h(v+1),1),t("span",J,h(R(_))+" estrelas ",1)]),t("div",Q,[(r(!0),a(x,null,g(_.players,f=>(r(),a("div",{key:f.id,class:"player-card"},[c(A,{player:f,playerPositionAbbreviations:b,showRemove:!1},null,8,["player"])]))),128))])])]))),128))])):(r(),a("div",U,e[3]||(e[3]=[t("p",{class:"text-gray-500"},"Nenhum time foi sorteado ainda.",-1)])))]),_:1}),t("div",X,[c(u,{type:"button",label:"Sortear Novamente",icon:"pi pi-refresh",severity:"secondary",disabled:i.value,onClick:p},null,8,["disabled"]),c(u,{type:"button",label:"Salvar Times",icon:"pi pi-check",disabled:i.value||!l.value.length,onClick:L},null,8,["disabled"])])])])}}});export{de as default};
